{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","href","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","onChange","htmlFor","autoComplete","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","initialState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById"],"mappings":"sQA4BeA,cAAQ,MANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,GCRZ,SAACA,EAAUE,EAAX,IACcC,EADyB,EAAjBA,eAEhBC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAACM,KAAM,8BDSbP,EAvBO,SAACQ,GAEnB,OACI,wBAAIC,UAAU,SACV,4BACI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBAEJ,4BACI,uBAAGC,QAASH,EAAMN,QAASU,KAAK,KAAhC,YAEJ,4BACI,kBAAC,IAAD,CAASF,GAAG,IAAID,UAAU,8CAA8CD,EAAMK,QAAQC,eEAvFC,EAbQ,WACnB,OACI,wBAAIN,UAAU,SACV,4BACI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WAEJ,4BACI,kBAAC,IAAD,CAASA,GAAG,WAAZ,YC2BDV,eARS,SAACgB,GAEvB,MAAO,CACLX,KAAMW,EAAMC,SAASZ,KACrBQ,QAASG,EAAMC,SAASJ,WAIbb,EA9BA,SAACQ,GAAW,IACfH,EAAkBG,EAAlBH,KAAMQ,EAAYL,EAAZK,QAERK,EAAQb,EAAKc,IAAM,kBAAC,EAAD,CAAeN,QAASA,IAAa,kBAAC,EAAD,MAC9D,OACI,yBAAKJ,UAAU,qBACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,mBAAvB,gBAGCJ,EAAKe,UAAYF,O,iDCanBG,EA3BO,SAACb,GAAW,IACvBc,EAAiBd,EAAjBc,cACP,OACI,yBAAKb,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBAENa,GAAiBA,EAAcC,KAAI,SAAAC,GAC/B,OACA,wBAAIC,IAAKD,EAAaE,IAClB,0BAAMjB,UAAU,oBAAoBe,EAAaG,KAAjD,KACA,0BAAMlB,UAAU,cAAce,EAAaI,SAC3C,yBAAKnB,UAAU,uBAAuBoB,IAAOL,EAAaM,KAAKC,UAAUC,oBCD9FC,EAbQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACI,yBAAKzB,UAAU,kCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcyB,EAAQC,OACtC,4CAAkBD,EAAQE,gBAA1B,IAA4CF,EAAQG,gBAEpD,uBAAG5B,UAAU,aAAaoB,IAAOK,EAAQI,UAAUP,UAAUQ,eCW9DC,EAjBK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,yBAAKhC,UAAU,wBAGPgC,GAAYA,EAASlB,KAAI,SAAAW,GACrB,OACI,kBAAC,IAAD,CAAMT,IAAKS,EAAQR,GAAIhB,GAAI,YAAcwB,EAAQR,IAC7C,kBAAC,EAAD,CAAgBQ,QAASA,U,gBCF/CQ,E,uKACO,MAEmCC,KAAKnC,MAAtCiC,EAFF,EAEEA,SAAUpC,EAFZ,EAEYA,KAAMiB,EAFlB,EAEkBA,cAEvB,OAAIjB,EAAKc,IAEL,yBAAKV,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAagC,SAAUA,KAE3B,yBAAKhC,UAAU,wBACX,kBAAC,EAAD,CAAea,cAAeA,OARzB,kBAAC,IAAD,CAAUZ,GAAG,gB,GALlBkC,aA+BTC,cACX7C,aAVoB,SAACgB,GAErB,MAAO,CAEHyB,SAAUzB,EAAM8B,UAAUC,QAAQN,SAClCpC,KAAMW,EAAMC,SAASZ,KACrBiB,cAAeN,EAAM8B,UAAUC,QAAQzB,kBAK3C0B,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJpDL,CAMbH,GCKaG,cACX7C,aAZoB,SAACgB,EAAOoC,GAE5B,IAAM1B,EAAK0B,EAASC,MAAMC,OAAO5B,GAC3Be,EAAWzB,EAAM8B,UAAUS,KAAKd,SAEtC,MAAO,CACHP,QAFYO,EAAWA,EAASf,GAAM,KAGtCrB,KAAMW,EAAMC,SAASZ,SAMzB2C,2BAAiB,CACb,CAACC,WAAY,cAHNJ,EA7CQ,SAACrC,GAAU,IAIvB0B,EAAiB1B,EAAjB0B,QAEP,OAFwB1B,EAARH,KAEPc,IAELe,EAEA,yBAAKzB,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAcyB,EAAQC,OACtC,2BAAID,EAAQN,UAEhB,yBAAKnB,UAAU,wCACX,0CAAgByB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,6BAAMR,IAAOK,EAAQI,UAAUP,UAAUQ,eASjD,yBAAK9B,UAAU,oBACX,kDAtBS,kBAAC,IAAD,CAAUC,GAAG,e,QCRhC8C,E,4MACFxC,MAAM,CACFyC,MAAO,GACPC,SAAU,I,EAGdC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAGhCC,aAAe,SAACJ,GACZA,EAAEK,iBAEF,EAAKzD,MAAM0D,OAAO,EAAKlD,Q,uDAGjB,IAAD,EACqB2B,KAAKnC,MAAxB2D,EADF,EACEA,UACP,OAFK,EACa9D,KACVc,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAE7B,yBAAKD,UAAU,aACX,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,cAAd,WACA,yBAAKA,UAAU,eACX,2BAAOF,KAAK,QAAQmB,GAAG,QAAQ2C,SAAU1B,KAAKgB,aAAclD,UAAU,aACtE,2BAAO6D,QAAQ,SAAf,UAEJ,yBAAK7D,UAAU,eACX,2BAAOF,KAAK,WAAWmB,GAAG,WAAW6C,aAAa,OAAO9D,UAAU,WAAW4D,SAAU1B,KAAKgB,eAC7F,2BAAOW,QAAQ,YAAf,aAEJ,yBAAK7D,UAAU,eACX,4BAAQF,KAAK,SAASE,UAAU,+DAAhC,SAChB,yBAAKA,UAAU,mBACX0D,EAAY,2BAAIA,GAAiB,a,GAnCxBvB,aAyDL5C,eAXQ,SAACgB,GACrB,MAAO,CACHmD,UAAWnD,EAAMX,KAAK8D,UACtB9D,KAAMW,EAAMC,SAASZ,SAGF,SAACJ,GACxB,MAAO,CACHiE,OAAQ,SAACM,GAAD,OAAiBvE,ER3DX,SAACuE,GACnB,OAAO,SAACvE,EAAUE,EAAX,IACcC,EADyB,EAAjBA,eAGhBC,OAAOoE,2BACZD,EAAYf,MACZe,EAAYd,UACdpD,MAAK,WACHL,EAAS,CAACM,KAAM,qBACjBmE,OAAM,SAACC,GACN1E,EAAS,CAACM,KAAM,cAAeoE,YQiDDT,CAAOM,QAGjCxE,CAA6CwD,GCzDvDoB,E,4MACF5D,MAAM,CACFyC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAGdnB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAGhCC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKzD,MAAMuE,OAAO,EAAK/D,Q,uDAEjB,IAAD,EACqB2B,KAAKnC,MAAxBH,EADF,EACEA,KAAM8D,EADR,EACQA,UACb,OAAG9D,EAAKc,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAE7B,yBAAKD,UAAU,aACX,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,cAAd,WACA,yBAAKA,UAAU,eACX,2BAAOF,KAAK,OAAQmB,GAAG,YAAY2C,SAAU1B,KAAKgB,aAAclD,UAAU,aAC1E,2BAAO6D,QAAQ,aAAf,eAEJ,yBAAK7D,UAAU,eACX,2BAAOF,KAAK,OAAOmB,GAAG,WAAW2C,SAAU1B,KAAKgB,aAAclD,UAAU,aACxE,2BAAO6D,QAAQ,YAAf,cAEJ,yBAAK7D,UAAU,eACX,2BAAOF,KAAK,QAAQmB,GAAG,QAAS2C,SAAU1B,KAAKgB,aAAclD,UAAU,aACvE,2BAAO6D,QAAQ,SAAf,UAEJ,yBAAK7D,UAAU,eACX,2BAAOF,KAAK,WAAWgE,aAAa,OAAO7C,GAAG,WAAWjB,UAAU,WAAW4D,SAAU1B,KAAKgB,eAC7F,2BAAOW,QAAQ,YAAf,aAEJ,yBAAK7D,UAAU,eACX,4BAAQF,KAAK,SAASE,UAAU,+DAAhC,WAChB,yBAAKA,UAAU,mBAAmB0D,EAAY,2BAAIA,GAAgB,a,GA1CrDvB,aAgEN5C,eAZS,SAACgB,GACrB,MAAO,CACHmD,UAAWnD,EAAMX,KAAK8D,UACtB9D,KAAMW,EAAMC,SAASZ,SAGF,SAACJ,GACxB,MAAO,CACH8E,OAAQ,SAACC,GAAD,OAAa/E,ETzCP,SAAC+E,GACnB,OAAO,SAAC/E,EAAUE,EAAX,GAAsD,IAAhC8E,EAA+B,EAA/BA,aACnBhE,GAAWb,EADuC,EAAjBA,eAEjC0C,EAAYmC,IAElBhE,EAASZ,OAAO6E,+BACZF,EAAQvB,MACRuB,EAAQtB,UACVpD,MAAK,SAAC6E,GACJ,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAKxD,KAAKR,KAAKkE,IAAI,CACxDR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBhE,SAAUkE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEvDxE,MAAK,WACJL,EAAS,CAACM,KAAM,sBACjBmE,OAAM,SAACC,GACN1E,EAAS,CAACM,KAAM,eAAgBoE,YSwBNI,CAAOC,QAI9BhF,CAA6C4E,G,QChEtDU,E,4MACFtE,MAAM,CACFmB,MAAO,GACPP,QAAS,I,EAEb+B,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAGhCC,aAAe,SAACJ,GACZA,EAAEK,iBAEF,EAAKzD,MAAM+E,cAAc,EAAKvE,OAE9B,EAAKR,MAAMgF,QAAQC,KAAK,M,uDAMxB,OADiB9C,KAAKnC,MAAdH,KACCc,IAGL,yBAAKV,UAAU,aACX,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,cAAd,kBACA,yBAAKA,UAAU,eACX,2BAAOF,KAAK,OAAOmB,GAAG,QAAQ2C,SAAU1B,KAAKgB,aAAclD,UAAU,aACrE,2BAAO6D,QAAQ,SAAf,UAEJ,yBAAK7D,UAAU,eACX,8BAAUiB,GAAG,UAAU2C,SAAU1B,KAAKgB,aAAclD,UAAU,yBAC9D,2BAAO6D,QAAQ,WAAf,YAGJ,yBAAK7D,UAAU,eACX,4BAAQF,KAAK,SAASE,UAAU,+DAAhC,aAhBK,kBAAC,IAAD,CAAUC,GAAG,gB,GArBdkC,aAyDb5C,eAVS,SAACgB,GACrB,MAAO,CACJX,KAAMW,EAAMC,SAASZ,SAGD,SAACJ,GACxB,MAAO,CACHsF,cAAe,SAACrD,GAAD,OAAajC,EC3DP,SAACiC,GAM1B,OAAO,SAACjC,EAAUE,EAAX,GAAqD,EAA/BC,YAAgC,IAEnD0C,GAAYmC,EAFsC,EAAlBA,gBAIhCpE,EAAUV,IAAWc,SAASJ,QAC9B6E,EAAWvF,IAAWc,SAASZ,KAAKc,IAE1C2B,EAAUG,WAAW,YAAY0C,IAAjC,2BACOzD,GADP,IAEIE,gBAAiBvB,EAAQgE,UACzBxC,eAAgBxB,EAAQiE,SACxBY,WACApD,UAAW,IAAIsD,QAEhBtF,MAAK,WACJL,EAAS,CAACM,KAAM,iBAAkB2B,eACnCwC,OAAM,SAACC,GACN1E,EAAS,CAACM,KAAM,sBAAuBoE,YDoCNY,CAAcrD,QAG5ClC,CAA6CsF,GEpC7CO,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKpF,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC,kBAAC,IAAD,CAAOqD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWxC,IACjC,kBAAC,IAAD,CAAOuC,KAAK,UAAUC,UAAWpB,IACjC,kBAAC,IAAD,CAAOmB,KAAK,UAAUC,UAAWV,QCnBvCY,EAAe,CACjB/B,UAAW,MAuCAgC,EApCK,WAA+B,IAA9BnF,EAA6B,uDAAvBkF,EAAcE,EAAS,uCAC9C,OAAOA,EAAO7F,MACV,IAAK,cAED,OADA8F,QAAQC,IAAI,eACL,2BACAtF,GADP,IAEImD,UAAW,iBAEnB,IAAK,gBAED,OADAkC,QAAQC,IAAI,iBACL,2BACAtF,GADP,IAEImD,UAAW,OAEnB,IAAK,kBAED,OADAkC,QAAQC,IAAI,mBACL,CACHtF,SAER,IAAK,iBAED,OADAqF,QAAQC,IAAI,kBACL,2BACAtF,GADP,IAEImD,UAAW,OAEnB,IAAK,eAED,OADAkC,QAAQC,IAAI,iBACL,2BACAtF,GADP,IAEImD,UAAWiC,EAAOzB,IAAI4B,UAE9B,QACI,OAAOvF,ICpCbkF,EAAe,CACjBzD,SAAU,CACN,CAACf,GAAG,EAAGS,MAAO,QAASP,QAAS,qBAChC,CAACF,GAAG,EAAGS,MAAO,QAASP,QAAS,qBAChC,CAACF,GAAG,EAAGS,MAAO,QAASP,QAAS,uBAmBzB4E,EAfQ,WAA+B,IAA9BxF,EAA6B,uDAAvBkF,EAAcE,EAAS,uCACjD,OAAOA,EAAO7F,MACV,IAAK,iBAED,OADA8F,QAAQC,IAAI,kBAAmBF,EAAOlE,SAC/BlB,EACX,IAAK,sBAED,OADAqF,QAAQC,IAAI,uBAAwBF,EAAOzB,KACpC3D,EACX,QACI,OAAOA,I,QCJJyF,EAPKC,YAAgB,CAClCrG,KAAM8F,EACNjE,QAASsE,EACT1D,UAAW6D,mBACX1F,SAAU2F,oB,wCCMZ3F,IAAS4F,cAXa,CACpBC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOFpG,QAAf,ECDMqG,EAAQC,YACZd,EACA5D,YACI2E,YAAgBC,IAAMC,kBAAkB,CAAEzC,4BAAc7E,6BACxDuH,yBAAe1G,IAAU2G,KAqBzBC,EAAW,CACf5G,aAEA6G,OAX2B,CAC3BC,YAAa,QACbC,wBAAwB,EACxBC,wBAAwB,EACxBC,kBAAkB,GAQlBjI,SAAUqH,EAAMrH,SAChBkI,mDAgBF,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChBhI,EAAOiI,aAAY,SAAAtH,GAAK,OAAIA,EAAMC,SAASZ,QACjD,OAAKe,mBAASf,GACHgI,EADiB,kDAgB5BE,IAASC,OACP,kBAAC,IAAD,CAAUlB,MAAOA,GACb,kBAAC,6BAA+BO,EAC5B,kBAACO,EAAD,KAAc,kBAAC,EAAD,SAGtBK,SAASC,eAAe,W","file":"static/js/main.798df570.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    \r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/create\">New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <a onClick={props.signOut} href=\"/\">Log Out</a>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating  cyan accent-3 black-text\">{props.profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: \"LOGIN_SUCCESS\"})\r\n        }).catch((err) => {\r\n            dispatch({type: \"LOGIN_ERROR\" ,err})\r\n        })\r\n    }\r\n} \r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: \"SIGNOUT_SUCCESS\"})\r\n        })\r\n    }\r\n} \r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirestore, getFirebase}) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) =>{\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to=\"/signup\">Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/signin\">Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from \"./SignedInLinks\"\r\nimport SignedOutLinks from \"./SignedOutLinks\"\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    // console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper black\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo left\">\r\n                    Firebase App\r\n                </Link>\r\n                {auth.isLoaded && links}\r\n                \r\n                {/* {\r\n                    auth.uid ? <SignedInLinks/> : <SignedOutLinks/>\r\n                } */}\r\n                {/* <SignedInLinks/> */}\r\n                {/* <SignedOutLinks/> */}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {\r\n                            notifications && notifications.map(notification => {\r\n                                return (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"deep-purple-text\">{notification.user} </span>\r\n                                    <span className=\"black-text\">{notification.content}</span>\r\n                                    <div className=\"grey-text note-date\">{moment(notification.time.toDate()).fromNow()}</div>\r\n                                </li>\r\n                                )\r\n                            })\r\n                        }\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\r\n                {/* <p className=\"grey-text\">{project.createdAt.toDate().toString()}</p> */}\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n\r\n            {\r\n                projects && projects.map(project => {\r\n                    return (\r\n                        <Link key={project.id} to={'/project/' + project.id}>\r\n                            <ProjectSummary project={project}/>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\n\r\nimport {connect} from \"react-redux\"\r\n\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props.projects)\r\n        const {projects, auth, notifications} = this.props \r\n\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        // projects: state.project.projects\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\r\n    ])\r\n)(Dashboard)\r\n\r\n    \r\n    ","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from \"react-router-dom\"\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    // console.log(props)\r\n    // const id = props.match.params.id\r\n\r\n    const {project, auth} = props\r\n\r\n    if(!auth.uid) return <Redirect to=\"/signin\"/>\r\n    \r\n    if (project) {\r\n        return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state)\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state={\r\n        email: \"\",\r\n        password: \"\"\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.props.signIn(this.state)\r\n\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"black-text\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"password\" id=\"password\" autoComplete=\"true\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button type=\"submit\" className=\"btn waves-effect waves-light deep-purple darken-3 z-depth-0\">Login</button>\r\n        <div className=\"red-text center\">{\r\n            authError ? <p>{authError}</p> : null\r\n        }</div>\r\n                    </div>\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"black-text\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\"  id=\"firstName\" onChange={this.handleChange} className=\"validate\"/>\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} className=\"validate\"/>\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"email\" id=\"email\"  onChange={this.handleChange} className=\"validate\"/>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"password\" autoComplete=\"true\" id=\"password\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button type=\"submit\" className=\"btn waves-effect waves-light deep-purple darken-3 z-depth-0\">Sign up</button>\r\n        <div className=\"red-text center\">{authError ? <p>{authError}</p> :null}</div>\r\n                    </div>\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nclass CreateProject extends Component {\r\n    state={\r\n        title: \"\",\r\n        content: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        this.props.createProject(this.state)\r\n\r\n        this.props.history.push('/')\r\n\r\n    }\r\n    render() {\r\n\r\n        const { auth } = this.props\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"black-text\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} className=\"validate\"/>\r\n                        <label htmlFor=\"title\">Title</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                        <label htmlFor=\"content\">Content</label>\r\n                    </div>\r\n                   \r\n                    <div className=\"input-field\">\r\n                        <button type=\"submit\" className=\"btn waves-effect waves-light deep-purple darken-3 z-depth-0\">Create</button>\r\n                    </div>\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n       auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    // return {\r\n    //     type: \"ADD_PROJECT\",\r\n    //     project\r\n    // }\r\n\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //async call to DB\r\n        const firestore = getFirestore()\r\n\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId,\r\n            createdAt: new Date(),\r\n            \r\n        }).then(() => {\r\n            dispatch({type: \"CREATE_PROJECT\", project})\r\n        }).catch((err) => {\r\n            dispatch({type: 'CRATE_PROJECT_ERROR', err})\r\n        })\r\n\r\n        \r\n    }\r\n}","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}/>\n            <Route path=\"/project/:id\" component={ProjectDetails}/>\n            <Route path=\"/signin\" component={SignIn}/>\n            <Route path=\"/signup\" component={SignUp}/>\n            <Route path=\"/create\" component={CreateProject}/>\n          </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const initialState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state=initialState, action)=>{\r\n    switch(action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            console.log(\"Login error\")\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log(\"Login success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log(\"signout success\")\r\n            return {\r\n                state\r\n            }\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log(\"signup success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNUP_ERROR\":\r\n            console.log(\"signup failed\")\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initialState = {\r\n    projects: [\r\n        {id:1, title: \"Lorem\", content: \"Lorem lorem lorem\"},\r\n        {id:2, title: \"Ipsum\", content: \"Ipsum ipsum ipsum\"},\r\n        {id:3, title: \"Dolor\", content: \"Dolor dolor dolor\"}\r\n    ]\r\n}\r\n \r\nconst projectReducer = (state=initialState, action)=>{\r\n    switch(action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log(\"created project\", action.project)\r\n            return state;\r\n        case \"CRATE_PROJECT_ERROR\":\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n        }\r\n        // console.log(state)\r\n    // return state\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from \"firebase/app\"\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n  apiKey: \"AIzaSyAAlwXVmIBTNoVwXAEOSLwyLIDiGkwKwB4\",\r\n  authDomain: \"react-firebase-app-e5e9f.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-app-e5e9f.firebaseio.com\",\r\n  projectId: \"react-firebase-app-e5e9f\",\r\n  storageBucket: \"react-firebase-app-e5e9f.appspot.com\",\r\n  messagingSenderId: \"999352626157\",\r\n  appId: \"1:999352626157:web:a4a902702d7e82b749d5e4\",\r\n  measurementId: \"G-P2083LQ9V9\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\n// firebase.analytics();\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\n\nimport {Provider, useSelector  } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport { reduxFirestore, getFirestore, createFirestoreInstance} from 'redux-firestore'\nimport { getFirebase, ReactReduxFirebaseProvider, isLoaded  } from 'react-redux-firebase'\n// import { reactReduxFirebase, getFirebase, ReactReduxFirebaseProvider, isLoaded  } from 'react-redux-firebase'\n\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n      reduxFirestore(firebase, fbConfig)\n      // reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n  )\n);\n\n\n// const store = createStore(rootReducer,\n//   compose(\n//    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})), reduxFirestore(fbConfig), reactReduxFirebase(fbConfig)\n//   )\n// );\n \n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\n\nconst rrfProps = {\n  firebase,\n  // config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n// const rrfProps = {\n//   firebase,\n//   config: fbConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance,\n//   userProfile: 'users', \n//   presence: 'presence',\n//   sessions: 'sessions'\n// }\n\n\n\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\n\n// store.firebaseAuthIsReady.then(() => {\n//   ReactDOM.render(\n//     <Provider store={store}>\n//         <ReactReduxFirebaseProvider {...rrfProps}>\n//             <App />\n//         </ReactReduxFirebaseProvider>\n//     </Provider>,\n//     document.getElementById(\"root\")\n//   );\n// })\n\n  ReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded><App /></AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}